// Intentionally empty. Initial analysis will generate this automatically.

// fix Overlapping functions 1:0x8000E668-1:0x8001E160 -> 1:0x8000EA14

hookvecs = .text:0x8000E668; // type:label scope:local
lpv = .text:0x8000E690; // type:label scope:local
lpwr = .text:0x8000E6A8; // type:label scope:local
nvec = .text:0x8000E6B8; // type:label scope:local
lpwr2 = .text:0x8000E6D8; // type:label scope:local
copy_exc = .text:0x8000E6FC; // type:label scope:local
scan_exc = .text:0x8000E720; // type:label scope:local
found_opcode = .text:0x8000E738; // type:label scope:local
ISIentry = .text:0x8000E7A4; // type:label scope:global
DSIentry = .text:0x8000E7BC; // type:label scope:global
gotexnum = .text:0x8000E7D0; // type:label scope:local
// IsDevLink has 4 bytes alignment
IsDevLink = .text:0x8000E88C; // type:label scope:global
snFileserver = .text:0x8000E8A0; // type:label scope:global
fscomms = .text:0x8000E904; // type:label scope:local
wait1 = .text:0x8000E90C; // type:label scope:local
sk1 = .text:0x8000E934; // type:label scope:local
err = .text:0x8000E95C; // type:label scope:local
usettyout = .text:0x8000E970; // type:label scope:local
sker = .text:0x8000E978; // type:label scope:local
cmdok = .text:0x8000E990; // type:label scope:local
cmdFS_ACK = .text:0x8000E9AC; // type:label scope:local
cmdFS_STOP = .text:0x8000EA00; // type:label scope:local
snInitFileserver = .text:0x8000EA14; // type:label scope:global
snFSNotAvailable = .text:0x8000EA88; // type:label scope:local
PCinit = .text:0x8000EAB4; // type:label scope:global
PCcreat = .text:0x8000EABC; // type:label scope:global
PCopen = .text:0x8000EAC4; // type:label scope:global
PCclose = .text:0x8000EACC; // type:label scope:global
PCread = .text:0x8000EAD4; // type:label scope:global
PCwrite = .text:0x8000EADC; // type:label scope:global
PClseek = .text:0x8000EAE4; // type:label scope:global
SNInitComm = .text:0x8000EAF0; // type:label scope:global
retrysync = .text:0x8000EB50; // type:label scope:local
SNInitInterrupts = .text:0x8000EC44; // type:label scope:global
SNQueryData = .text:0x8000EC8C; // type:label scope:global
SNRead = .text:0x8000ED14; // type:label scope:global
readbigblockloop = .text:0x8000ED90; // type:label scope:local
dotrailingblock = .text:0x8000EDFC; // type:label scope:local
donetrailing32bytereads = .text:0x8000EE58; // type:label scope:local
readtrailing32bits = .text:0x8000EE64; // type:label scope:local
donetrailing32bitreads = .text:0x8000EE7C; // type:label scope:local
readtrailingbytes = .text:0x8000EE88; // type:label scope:local
donetrailingblock = .text:0x8000EE9C; // type:label scope:local
SNWrite = .text:0x8000EED0; // type:label scope:global
write512byteblockloop = .text:0x8000EF4C; // type:label scope:local
writetrailingblock = .text:0x8000EFA4; // type:label scope:local
donetrailing32bytewrites = .text:0x8000EFF0; // type:label scope:local
writetrailing32bits = .text:0x8000EFFC; // type:label scope:local
donetrailing32bitwrites = .text:0x8000F014; // type:label scope:local
writetrailingbytes = .text:0x8000F020; // type:label scope:local
writtentrailingblock = .text:0x8000F034; // type:label scope:local
SNOpen = .text:0x8000F068; // type:label scope:global
SNClose = .text:0x8000F06C; // type:label scope:global
SNHandler = .text:0x8000F070; // type:label scope:local
nocallback = .text:0x8000F0B4; // type:label scope:local
SNSelect = .text:0x8000F0C4; // type:label scope:local
SNDeselect = .text:0x8000F0D4; // type:label scope:local
SNWiggleSelect = .text:0x8000F0E4; // type:label scope:local
SNSync = .text:0x8000F108; // type:label scope:local
waitforit = .text:0x8000F10C; // type:label scope:local
SNRead8 = .text:0x8000F11C; // type:label scope:local
SNWrite8 = .text:0x8000F15C; // type:label scope:local
SNRead32 = .text:0x8000F190; // type:label scope:local
SNWrite32 = .text:0x8000F1CC; // type:label scope:local
__cvt_fp2unsigned = .text:0x8000F1FC; // type:label scope:global
__shr2u = .text:0x8000F244; // type:label scope:global
__div2i = .text:0x8000F248; // type:label scope:global
__shl2i = .text:0x8000F24C; // type:label scope:global
__mod2i = .text:0x8000F250; // type:label scope:global
__shr2i = .text:0x8000F254; // type:label scope:global
__div2u = .text:0x8000F258; // type:label scope:global
__mod2u = .text:0x8000F25C; // type:label scope:global
__va_arg = .text:0x8000F260; // type:label scope:global
l0000004C = .text:0x8000F2AC; // type:label scope:local
l0000006C = .text:0x8000F2CC; // type:label scope:local
l0000008C = .text:0x8000F2EC; // type:label scope:local
l00000090 = .text:0x8000F2F0; // type:label scope:local
l000000B8 = .text:0x8000F318; // type:label scope:local
l000000E0 = .text:0x8000F340; // type:label scope:local
l000000EC = .text:0x8000F34C; // type:label scope:local
gcc2_compiled. = .text:0x8000F354; // type:label scope:local
__sn_serialp = .text:0x8000F358; // type:function size:0x58 scope:global
_write = .text:0x8000F3B0; // type:function size:0x50 scope:global
write = .text:0x8000F400; // type:function size:0x20 scope:global
close = .text:0x8000F420; // type:function size:0x20 scope:global
fstat = .text:0x8000F440; // type:function size:0x10 scope:global
lseek = .text:0x8000F450; // type:function size:0x20 scope:global
read = .text:0x8000F470; // type:function size:0x20 scope:global
open = .text:0x8000F490; // type:function size:0xA4 scope:global
__cntlzw = .text:0x8000F534; // type:function size:0x8 scope:global
__cvt_dbl_usll = .text:0x8000F53C; // type:function size:0x40 scope:global
__cvt_sll_flt = .text:0x8000F57C; // type:function size:0x24 scope:global
__cvt_ull_flt = .text:0x8000F5A0; // type:function size:0x84 scope:global
__cvt_sll_dbl = .text:0x8000F624; // type:function size:0x24 scope:global
__cvt_ull_dbl = .text:0x8000F648; // type:function size:0x84 scope:global
gcc2_compiled. = .text:0x8000F6CC; // type:label scope:local
exp = .text:0x8000F6CC; // type:function size:0x27C scope:global
gcc2_compiled. = .text:0x8000F948; // type:label scope:local
sqrt = .text:0x8000F948; // type:function size:0x264 scope:global
gcc2_compiled. = .text:0x8000FBAC; // type:label scope:local
cos = .text:0x8000FBAC; // type:function size:0xE0 scope:global
gcc2_compiled. = .text:0x8000FC8C; // type:label scope:local
sin = .text:0x8000FC8C; // type:function size:0xE0 scope:global
gcc2_compiled. = .text:0x8000FD6C; // type:label scope:local
tan = .text:0x8000FD6C; // type:function size:0x84 scope:global
gcc2_compiled. = .text:0x8000FDF0; // type:label scope:local
__kernel_cos = .text:0x8000FDF0; // type:function size:0xF4 scope:global
gcc2_compiled. = .text:0x8000FEE4; // type:label scope:local
__kernel_sin = .text:0x8000FEE4; // type:function size:0xAC scope:global
gcc2_compiled. = .text:0x8000FF90; // type:label scope:local
__kernel_tan = .text:0x8000FF90; // type:function size:0x25C scope:global
gcc2_compiled. = .text:0x800101EC; // type:label scope:local
__ieee754_rem_pio2 = .text:0x800101EC; // type:function size:0x364 scope:global
gcc2_compiled. = .text:0x80010550; // type:label scope:local
fabs = .text:0x80010550; // type:function size:0x3C scope:global
gcc2_compiled. = .text:0x8001058C; // type:label scope:local
__kernel_rem_pio2 = .text:0x8001058C; // type:function size:0x88C scope:global
gcc2_compiled. = .text:0x80010E18; // type:label scope:local
floor = .text:0x80010E18; // type:function size:0x16C scope:global
gcc2_compiled. = .text:0x80010F84; // type:label scope:local
scalbn = .text:0x80010F84; // type:function size:0x154 scope:global
gcc2_compiled. = .text:0x800110D8; // type:label scope:local
copysign = .text:0x800110D8; // type:function size:0x58 scope:global

// start - fix Found multiple functions inside a symbol: 1:0x800111C4 and 1:0x80011244. Check symbols.txt?

gcc2_compiled. = .text:0x80011130; // type:label scope:local
fprintf = .text:0x80011130; // type:function size:0x94 scope:global
gcc2_compiled. = .text:0x800111C4; // type:label scope:local
exit = .text:0x800111C4; // type:function size:0x80 scope:global
gcc2_compiled. = .text:0x80011244; // type:label scope:local
malloc = .text:0x80011244; // type:function size:0x3C scope:global

// end - fix Found multiple functions inside a symbol: 1:0x800111C4 and 1:0x80011244. Check symbols.txt?

free = .text:0x80011280; // type:function size:0x3C scope:global
realloc = .text:0x800112BC; // type:function size:0x3C scope:global
calloc = .text:0x800112F8; // type:function size:0x3C scope:global
gcc2_compiled. = .text:0x80011334; // type:label scope:local
memcpy = .text:0x80011334; // type:function size:0xA4 scope:global
gcc2_compiled. = .text:0x800113D8; // type:label scope:local
memmove = .text:0x800113D8; // type:function size:0xEC scope:global
gcc2_compiled. = .text:0x800114C4; // type:label scope:local
memset = .text:0x800114C4; // type:function size:0x94 scope:global
gcc2_compiled. = .text:0x80011558; // type:label scope:local
strcmp = .text:0x80011558; // type:function size:0xA8 scope:global
gcc2_compiled. = .text:0x80011600; // type:label scope:local
strround = .text:0x80011600; // type:function size:0x5C scope:global
strrev = .text:0x8001165C; // type:function size:0x4C scope:global
itoa = .text:0x800116A8; // type:function size:0x7C scope:global
fftoa = .text:0x80011724; // type:function size:0x4D8 scope:global
_vfflush = .text:0x80011BFC; // type:function size:0x30 scope:global
_vfwrite = .text:0x80011C2C; // type:function size:0xD8 scope:local
vfprintf = .text:0x80011D04; // type:function size:0xD8 scope:global
_vfprintf_r = .text:0x80011DDC; // type:function size:0x1440 scope:global
gcc2_compiled. = .text:0x8001321C; // type:label scope:local
_vfwrite = .text:0x8001321C; // type:function size:0xD8 scope:local
vfiprintf = .text:0x800132F4; // type:function size:0x3C scope:global
_vfiprintf_r = .text:0x80013330; // type:function size:0x12F4 scope:global
gcc2_compiled. = .text:0x80014624; // type:label scope:local
_setlocale_r = .text:0x80014624; // type:function size:0x1B4 scope:global
_localeconv_r = .text:0x800147D8; // type:function size:0xC scope:global
setlocale = .text:0x800147E4; // type:function size:0x30 scope:global
localeconv = .text:0x80014814; // type:function size:0x24 scope:global
gcc2_compiled. = .text:0x80014838; // type:label scope:local
_mbtowc_r = .text:0x80014838; // type:function size:0x31C scope:global
gcc2_compiled. = .text:0x80014B54; // type:label scope:local
memchr = .text:0x80014B54; // type:function size:0xC0 scope:global
gcc2_compiled. = .text:0x80014C14; // type:label scope:local
strcpy = .text:0x80014C14; // type:function size:0x84 scope:global
gcc2_compiled. = .text:0x80014C98; // type:label scope:local
strlen = .text:0x80014C98; // type:function size:0x6C scope:global
gcc2_compiled. = .text:0x80014D04; // type:label scope:local
__ashldi3 = .text:0x80014D04; // type:function size:0x40 scope:global
gcc2_compiled. = .text:0x80014D44; // type:label scope:local
__ashrdi3 = .text:0x80014D44; // type:function size:0x40 scope:global
gcc2_compiled. = .text:0x80014D84; // type:label scope:local
__cmpdi2 = .text:0x80014D84; // type:function size:0x3C scope:global
gcc2_compiled. = .text:0x80014DC0; // type:label scope:local
__divdi3 = .text:0x80014DC0; // type:function size:0x57C scope:global
gcc2_compiled. = .text:0x8001533C; // type:label scope:local
_exit = .text:0x8001533C; // type:function size:0x8 scope:global
gcc2_compiled. = .text:0x80015344; // type:label scope:local
__fixdfdi = .text:0x80015344; // type:function size:0x44 scope:global
gcc2_compiled. = .text:0x80015388; // type:label scope:local
__fixunsdfdi = .text:0x80015388; // type:function size:0x1B8 scope:global
gcc2_compiled. = .text:0x80015540; // type:label scope:local
__floatdidf = .text:0x80015540; // type:function size:0x5C scope:global
gcc2_compiled. = .text:0x8001559C; // type:label scope:local
__floatdisf = .text:0x8001559C; // type:function size:0xB0 scope:global
gcc2_compiled. = .text:0x8001564C; // type:label scope:local
__lshrdi3 = .text:0x8001564C; // type:function size:0x40 scope:global
gcc2_compiled. = .text:0x8001568C; // type:label scope:local
__moddi3 = .text:0x8001568C; // type:function size:0x534 scope:global
gcc2_compiled. = .text:0x80015BC0; // type:label scope:local
__udivdi3 = .text:0x80015BC0; // type:function size:0x4E4 scope:global
gcc2_compiled. = .text:0x800160A4; // type:label scope:local
__umoddi3 = .text:0x800160A4; // type:function size:0x498 scope:global
gcc2_compiled. = .text:0x8001653C; // type:label scope:local
THPVideoDecode = .text:0x8001660C; // type:function size:0x244 scope:global
__THPSetupBuffers = .text:0x80016850; // type:function size:0x44 scope:local
__THPReadFrameHeader = .text:0x80016894; // type:function size:0x13C scope:local
__THPReadScaneHeader = .text:0x800169D0; // type:function size:0x11C scope:local
__THPReadQuantizationTable = .text:0x80016AEC; // type:function size:0x3BC scope:local
__THPReadHuffmanTableSpecification = .text:0x80016EA8; // type:function size:0x1E0 scope:local
__THPHuffGenerateSizeTable = .text:0x80017088; // type:function size:0xF0 scope:local
__THPHuffGenerateCodeTable = .text:0x80017178; // type:function size:0x68 scope:local
__THPHuffGenerateDecoderTables = .text:0x800171E0; // type:function size:0x1BC scope:local
__THPRestartDefinition = .text:0x8001739C; // type:function size:0x54 scope:local
__THPPrepBitStream = .text:0x800173F0; // type:function size:0x24C scope:local
__THPDecompressYUV = .text:0x8001763C; // type:function size:0x10C scope:local
__THPDecompressiMCURow512x448 = .text:0x80017748; // type:function size:0x1A88 scope:local
__THPDecompressiMCURow640x480 = .text:0x800191D0; // type:function size:0x1A8C scope:local
__THPDecompressiMCURowNxN = .text:0x8001AC5C; // type:function size:0x1AAC scope:local
__THPHuffDecodeDCTCompY = .text:0x8001C708; // type:function size:0x67C scope:local
__THPHuffDecodeDCTCompU = .text:0x8001CD84; // type:function size:0x6A8 scope:local
__THPHuffDecodeDCTCompV = .text:0x8001D42C; // type:function size:0x6A8 scope:local
THPInit = .text:0x8001DAD4; // type:function size:0xA0 scope:global
THPAudioDecode = .text:0x8001DB74; // type:function size:0x464 scope:global
__THPAudioGetNewSample = .text:0x8001DFD8; // type:function size:0x90 scope:local
__THPAudioInitialize = .text:0x8001E068; // type:function size:0x3C scope:local
PPCMfmsr = .text:0x8001E0A4; // type:function size:0x8 scope:global
PPCMtmsr = .text:0x8001E0AC; // type:function size:0x8 scope:global
PPCOrMsr = .text:0x8001E0B4; // type:function size:0xC scope:global
PPCAndMsr = .text:0x8001E0C0; // type:function size:0xC scope:global
PPCAndCMsr = .text:0x8001E0CC; // type:function size:0xC scope:global
PPCMfhid0 = .text:0x8001E0D8; // type:function size:0x8 scope:global
PPCMthid0 = .text:0x8001E0E0; // type:function size:0x8 scope:global
PPCMfhid1 = .text:0x8001E0E8; // type:function size:0x8 scope:global
PPCMfl2cr = .text:0x8001E0F0; // type:function size:0x8 scope:global
PPCMtl2cr = .text:0x8001E0F8; // type:function size:0x8 scope:global
PPCMtdec = .text:0x8001E100; // type:function size:0x8 scope:global
PPCMfdec = .text:0x8001E108; // type:function size:0x8 scope:global
PPCSync = .text:0x8001E110; // type:function size:0x8 scope:global
PPCEieio = .text:0x8001E118; // type:function size:0x34 scope:global
PPCHalt = .text:0x8001E14C; // type:function size:0x14 scope:global
PPCMfmmcr0 = .text:0x8001E160; // type:function size:0x8 scope:global
